# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt autocd extendedglob nomatch notify
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/anirudh/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

source /home/anirudh/code/repos/dotfiles/zsh/aliases

# for git branch details at commandline
autoload -Uz vcs_info
precmd() { vcs_info }
zstyle ':vcs_info:git:*' formats '%b '

setopt PROMPT_SUBST
PROMPT='%F{red}%*%f %F{cyan}%~%f %F{magenta}${vcs_info_msg_0_}%f$ '
# sourcing of fzf keybindings and completion. This is important for dealing with vim keybinds in terminal
# as vim keybinds override ctrl + commands.
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh
export FZF_DEFAULT_COMMAND="fd -u . $HOME "
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_PREVIEW_COMMAND="bat --style=numbers,changes --wrap never --color always {} || cat {} || tree -C {}"

# aws login
#export awsloginpath="/Users/Anirudh.Kilambi/code/repos/stgessappdev-aws-cli-federated-login-utility-edd11f2e0fea"
export awsloginpath="~/.builds/stgessappdev-aws-cli-federated-login-utility-edd11f2e0fea"
export cdl_bi_login_role_arn="arn:aws:iam::103620787458:role/cgna.Azure_CDL_BI_SuperAdmin"
export cdl_bi_role_arn="arn:aws:iam::736888855894:role/cgna.CDL_BI_SuperAdmin"
export cdletl_login_role_arn="arn:aws:iam::103620787458:role/cgna.Azure_CDLETL_DevOps2"
export cdletldev_role_arn="arn:aws:iam::986831048533:role/cgna.DevOps2"
export cdletlprod_role_arn="arn:aws:iam::386292561702:role/cgna.DevOps2"
function awslogin() {
    if [ $1 = "bi" ]; then
        sed -i'' -e 's#"loginRoleArn" : .*# "loginRoleArn" : "'"$cdl_bi_login_role_arn"'",#g' $awsloginpath/config.json
        sed -i'' -e 's#"roleArn" : .*# "roleArn" : "'"$cdl_bi_role_arn"'"#g' $awsloginpath/config.json
    fi

    if [ $1 = "dev" ]; then
        sed -i'' -e 's#"loginRoleArn" : .*# "loginRoleArn" : "'"$cdletl_login_role_arn"'",#g' $awsloginpath/config.json
        sed -i'' -e 's#"roleArn" : .*# "roleArn" : "'"$cdletldev_role_arn"'"#g' $awsloginpath/config.json
    fi
    
    if [ $1 = "prod" ]; then
        sed -i'' -e 's#"loginRoleArn" : .*# "loginRoleArn" : "'"$cdletl_login_role_arn"'",#g' $awsloginpath/config.json
        sed -i'' -e 's#"roleArn" : .*# "roleArn" : "'"$cdletlprod_role_arn"'"#g' $awsloginpath/config.json
    fi

}

function db() {
     sudo DOCKER_BUILDKIT=1 docker build -t "$1" --secret id=aws,src=$HOME/.aws/credentials -f ~/code/repos/af2/dags/data_engineering/"$1"/contained_scripts/Dockerfile .
}
function dbeks() {
     DOCKER_BUILDKIT=1 docker build -t "$1" --secret id=aws,src=$HOME/.aws/credentials -f ~/code/repos/dataops-eks-airflow/dags/data_engineering/"$1"/contained_scripts/Dockerfile .
}

function dr() {
     sudo docker run -v $HOME/.aws/credentials:/root/.aws/credentials:ro "$1" 
}

function delete_untagged_images(){
    docker rmi $(docker images --filter "dangling=true" -q --no-trunc) --force 
}

function docker_login(){
     aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 736888855894.dkr.ecr.us-east-1.amazonaws.com
     
}
function docker_login_new(){
     aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 986831048533.dkr.ecr.us-east-1.amazonaws.com
}


#History wrapper
function omz_history {
  local clear list
  zparseopts -E c=clear l=list

  if [[ -n "$clear" ]]; then
    # if -c provided, clobber the history file
    echo -n >| "$HISTFILE"
    fc -p "$HISTFILE"
    echo >&2 History file deleted.
  elif [[ -n "$list" ]]; then
    # if -l provided, run as if calling `fc' directly
    builtin fc "$@"
  else
    # unless a number is provided, show all history events (starting from 1)
    [[ ${@[-1]-} = *[0-9]* ]] && builtin fc -l "$@" || builtin fc -l "$@" 1
  fi
}

# Timestamp format
case ${HIST_STAMPS-} in
  "mm/dd/yyyy") alias history='omz_history -f' ;;
  "dd.mm.yyyy") alias history='omz_history -E' ;;
  "yyyy-mm-dd") alias history='omz_history -i' ;;
  "") alias history='omz_history' ;;
  *) alias history="omz_history -t '$HIST_STAMPS'" ;;
esac

## History file configuration
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.zsh_history"
[ "$HISTSIZE" -lt 50000 ] && HISTSIZE=50000
[ "$SAVEHIST" -lt 10000 ] && SAVEHIST=10000

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history dataetopt EXTENDED_HISTORY
#export PYTHONPATH="/Users/Anirudh.Kilambi/code/repos/"
source /home/anirudh/code/repos/dotfiles/zsh/aliases
source ~/.builds/fzf-git.sh/fzf-git.sh
export FZF_DEFAULT_COMMAND="fd . $HOME"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_PREVIEW_COMMAND="bat --style=numbers,changes --wrap never --color always {} || cat {} || tree -C {}"
